#!/bin/bash
#
# compares sources
# Tamio-Vesa Nakajima

problemname=""
timelimit=""

# shellcheck disable=SC1091
source problemconfig

if [ -z "$problemname" ] || [ -z "$timelimit" ] ; then
    echo Bad config file
    exit 1
fi

srcs=""
configs=""

while getopts "hs:c:" opt ; do
    case $opt in
        h)
            echo "Usage: ./compare -s SRC1 ... -s SRCn -c CONF1 ... -c CONFm"
            echo "    -s SRC1 ... -s SRCn -- compares SRC1 to ... to SRCn"
            echo "    -c CONF1 ... -s CONm -- using config files CONF1 ... CONFm"
            exit 0
            ;;
        s)
            srcs="$srcs $OPTARG"
            ;;
        c)
            configs="$configs $OPTARG"
            ;;
        *)
            echo Bad options
            exit 1
            ;;
    esac
done

if [ -z "$srcs" ] ; then
    echo No sources provided >&2
    exit 1
fi

if [ -z "$configs" ] ; then
    echo No configs provided >&2
    exit 1
fi

# shellcheck disable=SC2086
srcs_arr=()
read -a srcs_arr -r <<< "$srcs"
nr_srcs=${#srcs_arr[@]}
outputs_arr=()
binary_arr=()

for ((i=0; i<nr_srcs; i++)) ; do
    outputs_arr[$i]=$(mktemp)
    binary_arr[$i]=$(mktemp)
done

for ((i=0; i<nr_srcs; i++)) ; do
    g++ "src/${srcs_arr[$i]}" -std=c++11 -O2 -o "${binary_arr[$i]}"
done

curr_test=0

path_to_tests=$(realpath tests)
trap 'rm $path_to_tests/$problemname-999.in' EXIT

while : ; do
    for conf in $configs ; do
        echo -en "                        \\r" >&2
        echo Doing test $curr_test >&2
        curr_test=$((curr_test + 1))

        ./lib/build_test_number 999 "$conf"

        hasTle=false

        for((i=0; i<nr_srcs; i++)) ; do
            timeUsed=$(./lib/run_src_test "${outputs_arr[$i]}" "${binary_arr[$i]}" "$problemname-999")

            if (( $(echo "$timeUsed > $timelimit" | bc -l ) )) ; then
                hasTle=true
            fi
        done

        # shellcheck disable=SC2086
        if [ $hasTle = true ] || ! diff --from-file ${outputs_arr[*]} > /dev/null ; then
            echo -en "                           \\r" >&2
            echo Has failed on: >&2
            cat tests/$problemname-999.in
            echo With outputs: >&2
            for((i=0 ; i<nr_srcs; i++)) ; do
                echo ${srcs_arr[$i]}: >&2
                cat ${outputs_arr[$i]}
                echo >&2
            done
            exit 0
        fi
    done
done
