#!/bin/bash
#
# Run the binary $1 with test $2, returning the time used in timeUsed, and leaving the output file in stage/$problemname.out
run_src_test () {
    binary=$1
    testname=$2

    # Get an appropriate timeout command
    timeoutCommand=timeout

    if [[ "$OSTYPE" == "darwin"* ]] ; then
        timeoutCommand=gtimeout
    fi

    # Fetch the problem configuration
    source problemconfig

    # clear any previous messages
    echo -en "\r                                      \r"

    # Output an appropriate messgae
    echo -en "Doing $testname\r"

    # Clean the stage
    rm stage/* 2> /dev/null

    # Copy the binary into the stage
    cp $binary stage/$problemname.bin

    # Copy the input into the stage
    cp tests/$testname.in stage/$problemname.in

    # Get the problem config
    source problemconfig

    # This string runs the competitor's executable
    runExec="./$problemname.bin > /dev/null 2> /dev/null"

    # This string runs the competitors executable with an appropriate timeout
    runExecWithTimeout="$timeoutCommand $timelimit $runExec"

    # Run the competitors executable with a timeout, and store the time used in timeUsed
    timeUsed=$(cd stage && { time $runExecWithTimeout ; } 2>&1 >/dev/null \
        | tail -3 \
        | head -1 \
        | awk -F ' ' '{print $2}' \
        | awk -F 'm' '{print $2}' \
        | awk -F 's' '{print $1}' && cd ..) 
}


